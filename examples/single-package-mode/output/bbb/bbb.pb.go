// Code generated by protoc-gen-go.
// source: bbb/bbb.proto
// DO NOT EDIT!

/*
Package bbb is a generated protocol buffer package.

It is generated from these files:

	bbb/bbb.proto

It has these top-level messages:

	BbbRequest
	BbbReply
*/
package bbb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import the_aaa_package "github.com/wirexpay/protoc-gen-gotemplate/examples/single-package-mode/output/aaa"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BbbRequest struct {
	Enable bool `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
}

func (m *BbbRequest) Reset()                    { *m = BbbRequest{} }
func (m *BbbRequest) String() string            { return proto.CompactTextString(m) }
func (*BbbRequest) ProtoMessage()               {}
func (*BbbRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BbbRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type BbbReply struct {
	Done bool `protobuf:"varint,1,opt,name=done" json:"done,omitempty"`
}

func (m *BbbReply) Reset()                    { *m = BbbReply{} }
func (m *BbbReply) String() string            { return proto.CompactTextString(m) }
func (*BbbReply) ProtoMessage()               {}
func (*BbbReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BbbReply) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func init() {
	proto.RegisterType((*BbbRequest)(nil), "the.bbb.package.BbbRequest")
	proto.RegisterType((*BbbReply)(nil), "the.bbb.package.BbbReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BbbService service

type BbbServiceClient interface {
	Aaa(ctx context.Context, in *the_aaa_package.AaaRequest, opts ...grpc.CallOption) (*the_aaa_package.AaaReply, error)
	Bbb(ctx context.Context, in *BbbRequest, opts ...grpc.CallOption) (*BbbReply, error)
}

type bbbServiceClient struct {
	cc *grpc.ClientConn
}

func NewBbbServiceClient(cc *grpc.ClientConn) BbbServiceClient {
	return &bbbServiceClient{cc}
}

func (c *bbbServiceClient) Aaa(ctx context.Context, in *the_aaa_package.AaaRequest, opts ...grpc.CallOption) (*the_aaa_package.AaaReply, error) {
	out := new(the_aaa_package.AaaReply)
	err := grpc.Invoke(ctx, "/the.bbb.package.BbbService/Aaa", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bbbServiceClient) Bbb(ctx context.Context, in *BbbRequest, opts ...grpc.CallOption) (*BbbReply, error) {
	out := new(BbbReply)
	err := grpc.Invoke(ctx, "/the.bbb.package.BbbService/Bbb", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BbbService service

type BbbServiceServer interface {
	Aaa(context.Context, *the_aaa_package.AaaRequest) (*the_aaa_package.AaaReply, error)
	Bbb(context.Context, *BbbRequest) (*BbbReply, error)
}

func RegisterBbbServiceServer(s *grpc.Server, srv BbbServiceServer) {
	s.RegisterService(&_BbbService_serviceDesc, srv)
}

func _BbbService_Aaa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(the_aaa_package.AaaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BbbServiceServer).Aaa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/the.bbb.package.BbbService/Aaa",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BbbServiceServer).Aaa(ctx, req.(*the_aaa_package.AaaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BbbService_Bbb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BbbRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BbbServiceServer).Bbb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/the.bbb.package.BbbService/Bbb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BbbServiceServer).Bbb(ctx, req.(*BbbRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BbbService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "the.bbb.package.BbbService",
	HandlerType: (*BbbServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Aaa",
			Handler:    _BbbService_Aaa_Handler,
		},
		{
			MethodName: "Bbb",
			Handler:    _BbbService_Bbb_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bbb/bbb.proto",
}

func init() { proto.RegisterFile("bbb/bbb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x59, 0x2a, 0xa5, 0x04, 0x8a, 0x90, 0x83, 0x68, 0x05, 0x91, 0xe2, 0xc1, 0xcb, 0x26,
	0xa0, 0xe7, 0x1e, 0xba, 0x77, 0x11, 0xea, 0xcd, 0xdb, 0xcc, 0x76, 0x48, 0x17, 0x93, 0x9d, 0xd8,
	0x9d, 0x88, 0xfd, 0x0b, 0xfe, 0x6a, 0xd9, 0x34, 0xa2, 0x60, 0x6f, 0x19, 0xde, 0xbc, 0xf7, 0xbd,
	0x8c, 0x9a, 0x23, 0xa2, 0x45, 0x44, 0x13, 0xf7, 0x2c, 0xac, 0xcf, 0x65, 0x47, 0x26, 0x8f, 0xd0,
	0xbe, 0x81, 0xa3, 0xc5, 0x1c, 0x00, 0x2c, 0x00, 0x1c, 0xf5, 0xe5, 0x9d, 0x52, 0x0d, 0xe2, 0x86,
	0xde, 0x13, 0x0d, 0xa2, 0x2f, 0xd4, 0x94, 0x7a, 0x40, 0x4f, 0x97, 0xd5, 0x6d, 0x75, 0x3f, 0xdb,
	0x94, 0x69, 0x79, 0xa3, 0x66, 0x79, 0x2b, 0xfa, 0x83, 0xd6, 0xea, 0x6c, 0xcb, 0xfd, 0xcf, 0x46,
	0x7e, 0x3f, 0x7c, 0x55, 0x39, 0xe6, 0x85, 0xf6, 0x1f, 0x5d, 0x4b, 0x7a, 0xa5, 0x26, 0x6b, 0x00,
	0x7d, 0x6d, 0x46, 0x78, 0x66, 0x1d, 0xe1, 0x66, 0x0d, 0x50, 0x50, 0x8b, 0xab, 0xd3, 0xe2, 0x48,
	0x58, 0xa9, 0x49, 0x83, 0x58, 0xec, 0x7f, 0xba, 0x9b, 0xdf, 0xa6, 0xc5, 0xfe, 0x4f, 0x8c, 0xfe,
	0xd0, 0x3c, 0xbf, 0x3e, 0xb9, 0x4e, 0x76, 0x09, 0x4d, 0xcb, 0xc1, 0x06, 0x4e, 0xde, 0xe6, 0xbf,
	0xb6, 0xb5, 0xa3, 0xbe, 0x76, 0x2c, 0x14, 0xa2, 0x07, 0x21, 0x4b, 0x9f, 0x10, 0xa2, 0xa7, 0xc1,
	0x0e, 0x5d, 0xef, 0x3c, 0xd5, 0x25, 0xa9, 0x0e, 0xbc, 0x25, 0xcb, 0x49, 0x62, 0x92, 0xf1, 0x92,
	0x38, 0xcd, 0xf6, 0xc7, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0xe1, 0x26, 0xcb, 0x5b, 0x01,
	0x00, 0x00,
}
